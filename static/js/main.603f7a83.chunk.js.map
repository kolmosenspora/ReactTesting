{"version":3,"sources":["serviceWorker.js","App.js","PostForm.js","BackendLogos.js","Slider.js","Accordion.js","BootstrapTesting.js","formi.js","Profile.js","SearchBar.js","index.js","postgres.svg","HTML5-logo.svg","CSS.3.svg","Javascript_badge.svg","Spring_Framework_Logo_2018.svg","icon-spring-boot.svg","Javan_logo.svg","logo.svg"],"names":["Boolean","window","location","hostname","match","App","Component","react_default","a","createElement","App_MenuContainer","React","MenuContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","activeItemPosition","activeItemColor","menuItems","text","handleClick","bind","assertThisInitialized","_this2","e","preventDefault","setState","document","getElementById","offsetTop","getComputedStyle","getPropertyValue","_this3","map","item","MenuItem","className","style","top","backgroundColor","id","onClick","toUpperCase","BackLogos","Nappi","Form_default","Group","controlId","Label","Control","type","placeholder","Text","Check","label","Button_default","variant","formaus","Profile","name","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oKAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gKCRAC,GCLiBC,6LDOf,OACIC,EAAAC,EAAAC,cAACC,EAAD,aAHMC,IAAML,YAWlBM,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,WAAY,GACZC,mBAAoB,EACpBC,gBAAiB,GACjBC,UAAW,CACP,CAAEC,KAAM,QACR,CAAEA,KAAM,WACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,aAIhBZ,EAAKa,YAAcb,EAAKa,YAAYC,KAAjBb,OAAAc,EAAA,EAAAd,CAAAD,IAhBJA,2EAmBPQ,GAAY,IAAAQ,EAAAb,KACpB,OAAO,SAAAc,GACHA,EAAEC,iBAEFF,EAAKG,SAAS,CACVX,aACAC,mBAAoBW,SAASC,eAAeb,GAAYc,UACxDZ,gBAAiBvB,OAAOoC,iBAAiBH,SAASC,eAAeb,IAAagB,iBAAiB,wDAKlG,IAAAC,EAAAtB,KACCQ,EAAYR,KAAKI,MAAMI,UAAUe,IAAI,SAAAC,GAAI,OAAIlC,EAAAC,EAAAC,cAACiC,EAAD,CAAUD,KAAOA,EAAOd,YAAcY,EAAKZ,gBAC9F,OACIpB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,kBACXpC,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,oBAAoBC,MAAO,CAAEC,IAAK5B,KAAKI,MAAME,mBAAoBuB,gBAAiB7B,KAAKI,MAAMG,mBAC3GC,UArCUd,IAAML,WA8ClC,SAASoC,EAAS7B,GACd,OACIN,EAAAC,EAAAC,cAAA,OACIkC,UAAU,YACVI,GAAKlC,EAAM4B,KAAKf,KAChBsB,QAAUnC,EAAMc,YAAYd,EAAM4B,KAAKf,OAErCb,EAAM4B,KAAKf,KAAKuB,eAKf5C,qCE5CA6C,oCCrBWvC,IAAML,sCCFLK,IAAML,UCyDlB6C,qBC9DP5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACID,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAK6C,MAAN,CAAYC,UAAU,kBAClB/C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAK+C,MAAN,sBACAhD,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAKgD,QAAN,CAAcC,KAAK,QAAQC,YAAY,gBACvCnD,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAKmD,KAAN,CAAWhB,UAAU,cAArB,mDAKJpC,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAK6C,MAAN,CAAYC,UAAU,qBAClB/C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAK+C,MAAN,iBACAhD,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAKgD,QAAN,CAAcC,KAAK,WAAWC,YAAY,cAE9CnD,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAK6C,MAAN,CAAYC,UAAU,oBAClB/C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAKoD,MAAN,CAAYH,KAAK,WAAWI,MAAM,kBAEtCtD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAQuD,QAAQ,UAAUN,KAAK,UAA/B,WAMGO,ICfAC,mLATP,OACI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAAkBQ,KAAKJ,MAAMqD,cAJvB5D,aCEEA,YC0BxB6D,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAAQnC,SAASC,eAAe,SVkG1C,kBAAmBmC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,wDWnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gJCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.603f7a83.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport logo from './Javan_logo.svg';\nimport logoSpring from './icon-spring-boot.svg';\nimport logo1 from './HTML5-logo.svg';\nimport logo2 from './CSS.3.svg';\nimport logo3 from './Javascript_badge.svg';\nimport logo4 from './logo.svg';\nimport './App.css';\nimport PostForm from './PostForm';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <MenuContainer/>\n        )\n    }\n}\n\n///////////////////\n// MenuContainer //\n///////////////////\nclass MenuContainer extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activeItem: '',\n            activeItemPosition: 0,\n            activeItemColor: '',\n            menuItems: [\n                { text: 'Home' },\n                { text: 'Gallery' },\n                { text: 'About' },\n                { text: 'Blog' },\n                { text: 'Contact' },\n            ],\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(activeItem) {\n        return e => {\n            e.preventDefault()\n\n            this.setState({\n                activeItem,\n                activeItemPosition: document.getElementById(activeItem).offsetTop,\n                activeItemColor: window.getComputedStyle(document.getElementById(activeItem)).getPropertyValue('background-color'),\n            })\n        }\n    }\n\n    render() {\n        const menuItems = this.state.menuItems.map(item => <MenuItem item={ item } handleClick={ this.handleClick }/>)\n        return (\n            <div className='menu-container'>\n                <span className='menu-item--active' style={{ top: this.state.activeItemPosition, backgroundColor: this.state.activeItemColor }}/>\n                { menuItems }\n            </div>\n        )\n    }\n}\n\n///////////////////\n// MenuItem      //\n///////////////////\nfunction MenuItem(props) {\n    return (\n        <div\n            className='menu-item'\n            id={ props.item.text }\n            onClick={ props.handleClick(props.item.text) }\n        >\n            { props.item.text.toUpperCase() }\n        </div>\n    )\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n\r\nclass PostForm extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        axios.post('http://localhost:8080/api/v1/pictures', this.state)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {name} = this.state\r\n        return (\r\n            <header className=\"App-header\">\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <div className=\"imageContainer\">\r\n                        <h5>Nimi: </h5>\r\n                        <input type=\"text\" name=\"name\" value={name} onChange={this.changeHandler}></input>\r\n                        <button type=\"submit\" className=\"nappini\">Submit</button>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </div>\r\n            </header>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport logo from './postgres.svg';\r\nimport logo1 from './Spring_Framework_Logo_2018.svg';\r\nimport './Backendstylesheet.css';\r\nimport logoSpring from \"./icon-spring-boot.svg\";\r\n\r\n\r\nfunction BackLogos() {\r\n    return (\r\n    <header className=\"Headeri\">\r\n        <div className=\"imageContainer\">\r\n\r\n\r\n            <div className=\"firstPic\">\r\n                <img src={logo1} className=\"App-logo\"  />\r\n                <p>Spring boot</p>\r\n            </div>\r\n\r\n            <div className=\"secondPic\">\r\n                <img src={logo} className=\"App-logo\" />\r\n                <p>PostgreSQL</p>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </header>\r\n    );\r\n}\r\n\r\n\r\nexport default BackLogos;","import React from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport logo from './postgres.svg';\r\nimport logo1 from './Spring_Framework_Logo_2018.svg';\r\n\r\nimport \"../node_modules/react-image-gallery/styles/scss/image-gallery.scss\";\r\n\r\n\r\nimport \"../node_modules/react-image-gallery/styles/css/image-gallery.css\";\r\n\r\n\r\n\r\n\r\n\r\nclass MyComponent extends React.Component {\r\n\r\n    render() {\r\n\r\n        const images = [\r\n            {\r\n                original: <img src={logo}> </img>,\r\n                thumbnail: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full//155.png'\r\n            },\r\n            {\r\n                original: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full//155.png',\r\n                thumbnail: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full//155.png'\r\n            },\r\n            {\r\n                original: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full//155.png',\r\n                thumbnail: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full//155.png'\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <ImageGallery items={images} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MyComponent;","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport BackendLogos from './BackendLogos';\r\nimport WebLogosComponent from './WebLogosComponent';\r\nimport './App.css';\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\n\r\n\r\n\r\nclass herppiderppi extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.name}</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default herppiderppi;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap'\r\nimport { Alert} from \"react-bootstrap/Alert\";\r\nimport './App.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport request from \"superagent\";\r\nimport callback from \"superagent\";\r\nimport errorCallback from \"superagent\";\r\n\r\n\r\n\r\n\r\nfunction Nappi() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n   function sendStuff() {\r\n\r\n\r\n           request.post('http://localhost:8080/api/v1/pictures')\r\n               .set('Content-Type', 'application/json')\r\n               .send('{\"name\":\"tj\"}')\r\n               .then(callback)\r\n               .catch(errorCallback)\r\n\r\n   }\r\n\r\n    return (\r\n\r\n\r\n\r\n        <header className=\"App-header\">\r\n    <div>\r\n        <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control inputRef={ref => { this.myInput = ref; }} type=\"email\" placeholder=\"Enter email\"/>\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicChecbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\"/>\r\n            </Form.Group>\r\n            <Button onClick={sendStuff} variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </div>\r\n\r\n\r\n\r\n        </header>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Nappi;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction formaus() {\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\"/>\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicChecbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\"/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\nexport default formaus();\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>First Name: {this.props.name}</div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Profile from './Profile';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: ''\r\n    }\r\n    fetchUser = () => {\r\n        axios.get('http://awesomeserver/users.username')\r\n            .then(res => {\r\n                return res.json()\r\n            }).then(response => {\r\n            this.setState({firstName: response.firstName, lastName: response.lastName, email: response.email})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input placeholder=\"Enter in a username\" />\r\n                <button onClick={this.fetchUser}>Search</button>\r\n                <Profile name={this.state.firstName} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebLogosComponent from './WebLogosComponent';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport BackendLogos from './BackendLogos';\nimport Mycomponent from './Slider';\nimport Nappi from './BootstrapTesting';\nimport Accordioni from './Accordion';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport form from './formi';\nimport SearchBar from './SearchBar';\nimport Profile from './Profile';\nimport PostForm from \"./PostForm\";\n\n\nvar Kokosivu = function() {\n    return (\n        <div>\n            <WebLogosComponent/>\n            <PostForm>\n\n            </PostForm>\n            <BackendLogos/>\n        </div>\n    )\n}\n\n\nReactDOM.render(<App/>, document.getElementById('miko'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/postgres.6810f344.svg\";","module.exports = __webpack_public_path__ + \"static/media/HTML5-logo.1edd5890.svg\";","module.exports = __webpack_public_path__ + \"static/media/CSS.3.15678ffe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Javascript_badge.237a7f44.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spring_Framework_Logo_2018.5e9d46e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-spring-boot.0a5dc749.svg\";","module.exports = __webpack_public_path__ + \"static/media/Javan_logo.6644d694.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}